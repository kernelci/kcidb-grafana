{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 1,
  "iteration": 1587141431826,
  "links": [],
  "panels": [
    {
      "content": "Welcome to Linux Kernel CI report database (**KCIDB**) dashboard.\nHere you can find testing reports aggregated from multiple CI systems (\"**origins**\").\nThis is a work in progress, and we welcome contributions and participation.\nSee the source code for [the collection system][kcidb], and for [this dashboard][kcidb-grafana].\nWrite to [kernelci@groups.io][maillist] if you want to start submitting results from your CI system,\nor if you want to receive automatic notifications of arriving results.\n\n[kcidb]: https://github.com/kernelci/kcidb/\n[kcidb-grafana]: https://github.com/kernelci/kcidb-grafana/\n[maillist]: mailto:kernelci@groups.io",
      "datasource": null,
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 7,
      "mode": "markdown",
      "options": {},
      "timeFrom": null,
      "timeShift": null,
      "title": "Welcome",
      "transparent": true,
      "type": "text"
    },
    {
      "columns": [],
      "datasource": null,
      "fontSize": "100%",
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 3
      },
      "id": 2,
      "maxDataPoints": "250",
      "options": {},
      "pageSize": 9,
      "showHeader": true,
      "sort": {
        "col": null,
        "desc": false
      },
      "styles": [
        {
          "alias": "Status‚Äã ‚Äã ‚Äã ‚Äã",
          "align": "left",
          "colorMode": "cell",
          "colors": [
            "rgba(242, 73, 92, 0)",
            "#C4162A",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTooltip": "View revision",
          "linkUrl": "/d/revision/revision?orgId=1&var-id=${__cell_0}",
          "mappingType": 1,
          "pattern": "revisions_valid_num",
          "thresholds": [
            "0",
            "1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "‚úîÔ∏è",
              "value": "1"
            },
            {
              "text": "‚úó",
              "value": "0"
            },
            {
              "text": "",
              "value": "-1"
            }
          ]
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "id",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "Repository",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTooltip": "View revision",
          "linkUrl": "/d/revision/revision?orgId=1&var-id=${__cell_0}",
          "mappingType": 1,
          "pattern": "git_repository_url",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Branch",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTooltip": "View revision",
          "linkUrl": "/d/revision/revision?orgId=1&var-id=${__cell_0}",
          "mappingType": 1,
          "pattern": "git_repository_branch",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Name",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTooltip": "View revision",
          "linkUrl": "/d/revision/revision?orgId=1&var-id=${__cell_0}",
          "mappingType": 1,
          "pattern": "revisions_git_repository_commit_name_str",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Hash",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTooltip": "View revision",
          "linkUrl": "/d/revision/revision?orgId=1&var-id=${__cell_0}",
          "mappingType": 1,
          "pattern": "revisions_git_repository_commit_hash_short",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Discovery time",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTooltip": "View revision",
          "linkUrl": "/d/revision/revision?orgId=1&var-id=${__cell_0}",
          "mappingType": 1,
          "pattern": "discovery_time_str",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Builds‚Äã ‚Äã ‚Äã ‚Äã",
          "align": "left",
          "colorMode": "cell",
          "colors": [
            "rgba(245, 54, 54, 0)",
            "#C4162A",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTooltip": "View revision",
          "linkUrl": "/d/revision/revision?orgId=1&var-id=${__cell_0}",
          "mappingType": 1,
          "pattern": "builds_valid_num",
          "thresholds": [
            "0",
            "1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "",
              "value": "-1"
            },
            {
              "text": "‚úó",
              "value": "0"
            },
            {
              "text": "‚úîÔ∏è",
              "value": "1"
            }
          ]
        },
        {
          "alias": "Tests‚Äã ‚Äã ‚Äã ‚Äã",
          "align": "auto",
          "colorMode": "cell",
          "colors": [
            "rgba(55, 135, 45, 0)",
            "#37872D",
            "#C4162A"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTooltip": "View revision",
          "linkUrl": "/d/revision/revision?orgId=1&var-id=${__cell_0}",
          "mappingType": 1,
          "pattern": "tests_status_num",
          "thresholds": [
            "3",
            "4"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "ERROR",
              "value": "5"
            },
            {
              "text": "FAIL",
              "value": "4"
            },
            {
              "text": "PASS",
              "value": "3"
            },
            {
              "text": "DONE",
              "value": "2"
            },
            {
              "text": "SKIP",
              "value": "1"
            },
            {
              "text": "",
              "value": "0"
            },
            {
              "text": "üöß ERROR",
              "value": "-1"
            },
            {
              "text": "üöß FAIL",
              "value": "-2"
            },
            {
              "text": "üöß PASS",
              "value": "-3"
            },
            {
              "text": "üöß DONE",
              "value": "-4"
            },
            {
              "text": "üöß SKIP",
              "value": "-5"
            },
            {
              "text": "",
              "value": "-6"
            },
            {
              "text": "‚ùì ERROR",
              "value": "-7"
            },
            {
              "text": "‚ùì FAIL",
              "value": "-8"
            },
            {
              "text": "‚ùì PASS",
              "value": "-9"
            },
            {
              "text": "‚ùì DONE",
              "value": "-10"
            },
            {
              "text": "‚ùì SKIP",
              "value": "-11"
            },
            {
              "text": "",
              "value": "-12"
            }
          ]
        },
        {
          "alias": "Origin",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTooltip": "View revision",
          "linkUrl": "/d/revision/revision?orgId=1&var-id=${__cell_0}",
          "mappingType": 1,
          "pattern": "origin",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "",
          "align": "left",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "linkTooltip": "View revision",
          "linkUrl": "/d/revision/revision?orgId=1&var-id=${__cell_0}",
          "mappingType": 1,
          "pattern": "/.*/",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "orderByCol": "1",
          "orderBySort": "1",
          "rawQuery": true,
          "rawSql": "SELECT revisions.id,\n       SUBSTR(revisions.id, 1, STRPOS(revisions.id, \":\") - 1) as origin,\n       revisions.git_repository_url,\n       revisions.git_repository_branch,\n       IF(revisions.git_repository_commit_name IS NULL, \"\", revisions.git_repository_commit_name) as revisions_git_repository_commit_name_str,\n       SUBSTR(revisions.git_repository_commit_hash, 0, 12) as revisions_git_repository_commit_hash_short,\n       IF(revisions.discovery_time IS NULL, \"\", CAST(revisions.discovery_time AS STRING)) as discovery_time_str,\n       CASE revisions.valid WHEN true THEN 1 WHEN false THEN 0 ELSE -1 END AS revisions_valid_num,\n       MIN(CASE builds.valid WHEN true THEN 1 WHEN false THEN 0 ELSE -1 END) as builds_valid_num,\n       MAX((CASE tests.status WHEN \"SKIP\" THEN 1 WHEN \"DONE\" THEN 2 WHEN \"PASS\" THEN 3 WHEN \"FAIL\" THEN 4 WHEN \"ERROR\" THEN 5 ELSE 0 END) -\n           (CASE tests.waived WHEN false THEN 0 WHEN true THEN 1 ELSE 2 END) * 6) as tests_status_num\nFROM ${dataset}.revisions AS revisions\nLEFT OUTER JOIN ${dataset}.builds AS builds ON builds.revision_id = revisions.id\nLEFT OUTER JOIN ${dataset}.tests AS tests ON tests.build_id = builds.id\nWHERE revisions.id LIKE CONCAT(${origin}, \":%\") AND\n      revisions.git_repository_url LIKE IF(${git_repository_url} = \"%\", \"%\", REGEXP_REPLACE(${git_repository_url}, r\"([%_\\\\])\", r\"\\\\\\1\")) AND\n      (\n        revisions.discovery_time >= TIMESTAMP_MILLIS(${__from}) AND revisions.discovery_time <= TIMESTAMP_MILLIS(${__to}) OR\n        revisions.discovery_time IS NULL\n      )\nGROUP BY\n  revisions.id,\n  revisions.git_repository_url,\n  revisions.git_repository_branch,\n  revisions.git_repository_commit_name,\n  revisions.git_repository_commit_hash,\n  revisions.discovery_time,\n  revisions.valid\nORDER BY revisions.discovery_time DESC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "-- value --"
                ],
                "type": "column"
              }
            ]
          ],
          "timeColumn": "-- time --",
          "timeColumnType": "TIMESTAMP",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Revisions",
      "transform": "table",
      "type": "table"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "Google BigQuery",
      "fill": 0,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 15
      },
      "hiddenSeries": false,
      "id": 4,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 2,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "convertToUTC": false,
          "dataset": "kernelci03",
          "format": "time_series",
          "group": [
            {
              "params": [
                "1d",
                "none"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "metricColumn": "none",
          "orderByCol": "1",
          "orderBySort": "1",
          "partitioned": false,
          "partitionedField": "",
          "project": "kernelci",
          "rawQuery": true,
          "rawSql": "SELECT\n  TIMESTAMP(DATE(revisions.discovery_time)) AS time,\n  count(revisions.id) AS Revisions\nFROM\n  ${dataset}.revisions AS revisions\nWHERE\n  revisions.id LIKE CONCAT(${origin}, \":%\") AND\n  revisions.git_repository_url LIKE IF(${git_repository_url} = \"%\", \"%\", REGEXP_REPLACE(${git_repository_url}, r\"([%_\\\\])\", r\"\\\\\\1\")) AND\n  revisions.discovery_time IS NOT NULL AND\n  revisions.discovery_time BETWEEN TIMESTAMP_MILLIS(${__from}) AND TIMESTAMP_MILLIS(${__to})\nGROUP BY\n  time\nORDER BY\n  time ASC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              },
              {
                "params": [
                  "count"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "revisions"
                ],
                "type": "alias"
              }
            ]
          ],
          "sharded": false,
          "table": "revisions",
          "timeColumn": "discovery_time",
          "timeColumnType": "TIMESTAMP",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "name": "",
              "params": [
                "(discovery_time IS NULL)",
                "=",
                "FALSE"
              ],
              "type": "expression"
            }
          ]
        },
        {
          "convertToUTC": false,
          "dataset": "kernelci03",
          "format": "time_series",
          "group": [
            {
              "params": [
                "1d",
                "none"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "metricColumn": "none",
          "orderByCol": "1",
          "orderBySort": "1",
          "partitioned": false,
          "partitionedField": "",
          "project": "kernelci",
          "rawQuery": true,
          "rawSql": "SELECT\n  TIMESTAMP(DATE(builds.start_time)) AS time,\n  count(builds.id) AS Builds\nFROM\n  ${dataset}.builds AS builds,\n  ${dataset}.revisions AS revisions\nWHERE\n  revisions.id = builds.revision_id AND\n  builds.id LIKE CONCAT(${origin}, \":%\") AND\n  revisions.git_repository_url LIKE IF(${git_repository_url} = \"%\", \"%\", REGEXP_REPLACE(${git_repository_url}, r\"([%_\\\\])\", r\"\\\\\\1\")) AND\n  builds.start_time IS NOT NULL AND\n  builds.start_time BETWEEN TIMESTAMP_MILLIS(${__from}) AND TIMESTAMP_MILLIS(${__to})\nGROUP BY\n  time\nORDER BY\n  time ASC",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              },
              {
                "params": [
                  "count"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "revisions"
                ],
                "type": "alias"
              }
            ]
          ],
          "sharded": false,
          "table": "revisions",
          "timeColumn": "discovery_time",
          "timeColumnType": "TIMESTAMP",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "name": "",
              "params": [
                "(discovery_time IS NULL)",
                "=",
                "FALSE"
              ],
              "type": "expression"
            }
          ]
        },
        {
          "convertToUTC": false,
          "dataset": "kernelci03",
          "format": "time_series",
          "group": [
            {
              "params": [
                "1d",
                "none"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "metricColumn": "none",
          "orderByCol": "1",
          "orderBySort": "1",
          "partitioned": false,
          "partitionedField": "",
          "project": "kernelci",
          "rawQuery": true,
          "rawSql": "SELECT\n  TIMESTAMP(DATE(tests.start_time)) AS time,\n  count(tests.id) AS Tests\nFROM\n  ${dataset}.tests AS tests,\n  ${dataset}.builds AS builds,\n  ${dataset}.revisions AS revisions\nWHERE\n  revisions.id = builds.revision_id AND\n  builds.id = tests.build_id AND\n  tests.id LIKE CONCAT(${origin}, \":%\") AND\n  revisions.git_repository_url LIKE IF(${git_repository_url} = \"%\", \"%\", REGEXP_REPLACE(${git_repository_url}, r\"([%_\\\\])\", r\"\\\\\\1\")) AND\n  tests.start_time IS NOT NULL AND\n  tests.start_time BETWEEN TIMESTAMP_MILLIS(${__from}) AND TIMESTAMP_MILLIS(${__to})\nGROUP BY\n  time\nORDER BY\n  time ASC",
          "refId": "C",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              },
              {
                "params": [
                  "count"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "revisions"
                ],
                "type": "alias"
              }
            ]
          ],
          "sharded": false,
          "table": "revisions",
          "timeColumn": "discovery_time",
          "timeColumnType": "TIMESTAMP",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            },
            {
              "name": "",
              "params": [
                "(discovery_time IS NULL)",
                "=",
                "FALSE"
              ],
              "type": "expression"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Reports",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 10,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "Google BigQuery",
      "fill": 8,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 15
      },
      "hiddenSeries": false,
      "id": 5,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 0,
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": true,
      "steppedLine": false,
      "targets": [
        {
          "convertToUTC": false,
          "dataset": "kernelci03",
          "format": "time_series",
          "group": [
            {
              "params": [
                "$__interval",
                "none"
              ],
              "type": "time"
            },
            {
              "params": [
                "architecture"
              ],
              "type": "column"
            }
          ],
          "hide": false,
          "metricColumn": "architecture",
          "orderByCol": "1",
          "orderBySort": "1",
          "partitioned": false,
          "partitionedField": "",
          "project": "kernelci",
          "rawQuery": true,
          "rawSql": "SELECT\n  TIMESTAMP(DATE(builds.start_time)) AS time,\n  builds.architecture AS metric,\n  COUNT(builds.id) AS Builds\nFROM\n  ${dataset}.builds AS builds,\n  ${dataset}.revisions AS revisions\nWHERE\n  revisions.id = builds.revision_id AND\n  builds.id LIKE CONCAT(${origin}, \":%\") AND\n  revisions.git_repository_url LIKE IF(${git_repository_url} = \"%\", \"%\", REGEXP_REPLACE(${git_repository_url}, r\"([%_\\\\])\", r\"\\\\\\1\")) AND\n  builds.architecture IS NOT NULL AND\n  builds.start_time IS NOT NULL AND\n  builds.start_time BETWEEN TIMESTAMP_MILLIS(${__from}) AND TIMESTAMP_MILLIS(${__to})\nGROUP BY\n  time, metric\nORDER BY\n  time ASC, metric ASC",
          "refId": "B",
          "select": [
            [
              {
                "params": [
                  "id"
                ],
                "type": "column"
              },
              {
                "params": [
                  "count"
                ],
                "type": "aggregate"
              },
              {
                "params": [
                  "id"
                ],
                "type": "alias"
              }
            ]
          ],
          "sharded": false,
          "table": "builds",
          "timeColumn": "start_time",
          "timeColumnType": "TIMESTAMP",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [],
      "timeShift": null,
      "title": "Builds per architecture",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    }
  ],
  "refresh": "30m",
  "schemaVersion": 22,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": "\"%\"",
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "Google BigQuery",
        "definition": "SELECT DISTINCT SUBSTR(id, 1, STRPOS(id, \":\") - 1) FROM ${dataset}.revisions",
        "hide": 0,
        "includeAll": true,
        "label": "Origin",
        "multi": false,
        "name": "origin",
        "options": [],
        "query": "SELECT DISTINCT SUBSTR(id, 1, STRPOS(id, \":\") - 1) FROM ${dataset}.revisions",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": "\"%\"",
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "Google BigQuery",
        "definition": "SELECT DISTINCT git_repository_url FROM ${dataset}.revisions WHERE git_repository_url IS NOT NULL AND git_repository_url != \"%\" ORDER BY git_repository_url ASC",
        "hide": 0,
        "includeAll": true,
        "label": "Repo",
        "multi": false,
        "name": "git_repository_url",
        "options": [],
        "query": "SELECT DISTINCT git_repository_url FROM ${dataset}.revisions WHERE git_repository_url IS NOT NULL AND git_repository_url != \"%\" ORDER BY git_repository_url ASC",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": true,
          "text": "kernelci03",
          "value": "kernelci03"
        },
        "hide": 2,
        "label": null,
        "name": "dataset",
        "options": [
          {
            "selected": true,
            "text": "kernelci03",
            "value": "kernelci03"
          }
        ],
        "query": "kernelci03",
        "skipUrlSync": false,
        "type": "constant"
      }
    ]
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "Home",
  "uid": "home",
  "version": 26
}